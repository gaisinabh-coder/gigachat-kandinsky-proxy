from flask import Flask, request, jsonify
import requests, uuid

app = Flask(__name__)

# üîπ –ü–æ–¥—Å—Ç–∞–≤—å —Å—é–¥–∞ —Å–≤–æ–π –∫–ª—é—á –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ Base64(ClientID:ClientSecret)
AUTH_KEY = "MDE5OTcwM2YtZmRkNC03ODFjLThhZDEtMjYzYmFhMDY3MDMxOmY4MTlhMGUxLTFhYmUtNGUwMS04NzYwLTdmMjExNDE4YzUxMg=="

# üîπ –í—ã–±–µ—Ä–∏ scope, –∫–æ—Ç–æ—Ä—ã–π —É —Ç–µ–±—è –µ—Å—Ç—å (–æ–±—ã—á–Ω–æ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π):
SCOPE = "GIGACHAT_API_PERS"   # –∏–ª–∏ "GIGACHAT_API_CORP"

# ---------- –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ ----------
def get_token():
    url = "https://ngw.devices.sberbank.ru:9443/api/v2/oauth"
    headers = {
        "Content-Type": "application/x-www-form-urlencoded",
        "Accept": "application/json",
        "RqUID": str(uuid.uuid4()),
        "Authorization": f"Basic {AUTH_KEY}"
    }
    data = {"scope": SCOPE}
    r = requests.post(url, headers=headers, data=data, verify=False)  # verify=False ‚Üí –Ω–µ —Ä—É–≥–∞–µ—Ç—Å—è –Ω–∞ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç
    r.raise_for_status()
    return r.json()["access_token"]

# ---------- GigaChat (—Ç–µ–∫—Å—Ç—ã) ----------
@app.route("/chat", methods=["POST"])
def chat():
    token = get_token()
    url = "https://gigachat.devices.sberbank.ru/api/v1/chat/completions"
    headers = {
        "Content-Type": "application/json",
        "Authorization": f"Bearer {token}"
    }
    r = requests.post(url, headers=headers, json=request.json, verify=False)
    return jsonify(r.json())

# ---------- Kandinsky (–∫–∞—Ä—Ç–∏–Ω–∫–∏) ----------
@app.route("/kandinsky", methods=["POST"])
def kandinsky():
    token = get_token()
    # ‚ö†Ô∏è –ü–æ–¥—Å—Ç–∞–≤—å —Å—é–¥–∞ —Å–≤–æ–π —ç–Ω–¥–ø–æ–∏–Ω—Ç –∑–∞–ø—É—Å–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ (–∏–∑ –∫–∞–±–∏–Ω–µ—Ç–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞)
    url = "https://api-key.fusionbrain.ai/key/api/v1/99d833d6-fec0-44fd-a1c2-35d6bf96b5c2"
    headers = {
        "Content-Type": "application/json",
        "Authorization": f"Bearer {token}"
    }
    r = requests.post(url, headers=headers, json=request.json, verify=False)
    return jsonify(r.json())

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=5000)
